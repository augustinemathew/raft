syntax = "proto3";
package com.augustine.raft.wal.proto;
option java_package="com.augustine.raft.proto";

message LogEntry {
    int64 lsn = 1;
    int64 term =2;

    enum Type{
        NORMAL = 0;
        SNAPSHOT = 1;
        CONFIGURATION = 2;
        NO_OP = 3;
    }

    Type type = 3;
    oneof payload {
        bytes message = 4;
        RaftConfiguration configuration = 5;
    }
}

message RaftConfiguration {

    int32 leaderHeartbeatIntervalMs = 1;
    int32 minElectionTimeoutMs = 2;
    int32 maxElectionTimeoutMs = 3;

     message RaftPeer {
                int64 serverId = 1;
                string dnsName = 2;
                int32 port = 3;
     }
     repeated RaftPeer peers = 4;
}

message SnapshotHeader{
    int64 lastIncludedIndex = 1;
    int64 lastIncludedTerm = 2;
    RaftConfiguration lastConfiguration =3;
    bytes sha256 = 4;
    bool isComplete = 5;
}


message PersistentState {
    int64 term = 1;
    int64 votedFor = 2;
    int64 lastAppliedIndex = 3;
    int64 lastCommittedIndex = 4;
    RaftConfiguration lastGoodConfiguration = 5;
}

service Raft{
    rpc appendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}
    rpc vote (VoteRequest) returns (VoteResponse) {}
    rpc installSnapshot(InstallSnapshotRequest) returns (InstallSnapshotResponse) {}
}

message AppendEntriesRequest {
    int64 requestServerId = 1;
    int64 term = 2;
    int64 leaderId = 3;
    int64 prevLogIndex = 4;
    int64 prevLogTerm = 5;
    int64 leaderCommit = 6;
    repeated LogEntry entries = 7;
}

message AppendEntriesResponse{
    int64  term = 1;
    bool   succeeded = 2;
    int64  lastLogIndexOnServer = 3;
    AppendEntriesConflictInfo conflict_info = 4;
}

message AppendEntriesConflictInfo {
    int64  conflicting_term = 4;
    int64  first_index_of_conflicting_term = 5;
}

message VoteRequest{
    int64 requestServerId = 1;
    int64 term = 2;
    int64 candidateId =3;
    int64 lastLogIndex=4;
    int64 lastLogTerm=5;
}

message VoteResponse{
    int64 term = 1;
    bool voteGranted = 2;
}


message InstallSnapshotRequest{
    int64 requestServerId = 1;
    int64 term = 2;
    int64 leaderId = 3;
    int64 lastIncludedIndex = 4;
    int64 lastIncludedTerm = 5;
    int64 offset = 6;
    bytes data = 8;
    bool done = 9;
    //When done = true the following fields are set
    RaftConfiguration configuration = 10;
    bytes sha256 = 11;
}

message InstallSnapshotResponse{
    int64 term=1;
    bool succeeded=2;
}

